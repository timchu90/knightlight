<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>i = 1;
for (var j = 0; i &lt;= 4; i++)
{
    if (menustart[i] == true &amp;&amp; playerhp[i] &gt; 0)
        break;
}
isContinueSelected = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var controller = i-1;
var currentLAxisState = gamepad_axis_value(controller, gp_axislv);
var currentRAxisState = gamepad_axis_value(controller, gp_axisrv);

if ((currentLAxisState &gt; 0.5 &amp;&amp; alarm[1] &lt; 1)
    || (currentRAxisState &gt; 0.5 &amp;&amp; alarm[1] &lt; 1)
    || gamepad_button_check_pressed(controller,gp_padd)){
    isContinueSelected = !isContinueSelected;
    alarm[1] = room_speed / 3;
    audio_play_sound(Select,10,false);
}
else if ((currentLAxisState &lt; -0.5 &amp;&amp; alarm[2] &lt; 1)
    || (currentRAxisState &lt; -0.5 &amp;&amp; alarm[2] &lt; 1)
    || gamepad_button_check_pressed(controller,gp_padu)){
    isContinueSelected = !isContinueSelected;
    alarm[2] = room_speed / 3;
    audio_play_sound(Select,10,false);
}
else if (gamepad_button_check_pressed(controller,gp_face1)
    || gamepad_button_check_pressed(controller,gp_shoulderr)
    || gamepad_button_check_pressed(controller,gp_shoulderrb)){
    if (isContinueSelected)
        room_goto(arrayOfRooms[numberOfRounds]);
    else
        room_goto(rm_weapon_select);
    //audio_play_sound(Confirm,10,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// BGM
//var i = 1;
var xPos = 224
var xDelta = 256;

switch(i)
{
    case 1:
        draw_sprite(sp_redknight,0,xPos,500);
        draw_sprite(sp_blueghost,0,xPos + xDelta,500);
        draw_sprite(sp_greenghost,0,xPos + (2*xDelta),500);
        draw_sprite(sp_yellowghost,0,xPos + (3*xDelta),500);
        if (isContinueSelected)
        {
            draw_set_color(c_black);
            draw_text(xPos-40,550,"CONTINUE");
            draw_set_color(c_gray);
            draw_text(xPos-70,580,"WEAPON SELECT");
        }
        else
        {
            draw_set_color(c_gray);
            draw_text(xPos-40,550,"CONTINUE");
            draw_set_color(c_black);
            draw_text(xPos-70,580,"WEAPON SELECT");
        }
        break;
    case 2:
        draw_sprite(sp_redghost,0,xPos,500);
        draw_sprite(sp_blueknight,0,xPos + xDelta,500);
        draw_sprite(sp_greenghost,0,xPos + (2*xDelta),500);
        draw_sprite(sp_yellowghost,0,xPos + (3*xDelta),500);
        if (isContinueSelected)
        {
            draw_set_color(c_black);
            draw_text(xPos-40+xDelta,550,"CONTINUE");
            draw_set_color(c_gray);
            draw_text(xPos-70+xDelta,580,"WEAPON SELECT");
        }
        else
        {
            draw_set_color(c_gray);
            draw_text(xPos-40+xDelta,550,"CONTINUE");
            draw_set_color(c_black);
            draw_text(xPos-70+xDelta,580,"WEAPON SELECT");
        }
        break;
    case 3:
        draw_sprite(sp_redghost,0,xPos,500);
        draw_sprite(sp_blueghost,0,xPos + xDelta,500);
        draw_sprite(sp_greenknight,0,xPos + (2*xDelta),500);
        draw_sprite(sp_yellowghost,0,xPos + (3*xDelta),500);
        if (isContinueSelected)
        {
            draw_set_color(c_black);
            draw_text(xPos-40+(2*xDelta),550,"CONTINUE");
            draw_set_color(c_gray);
            draw_text(xPos-70+(2*xDelta),580,"WEAPON SELECT");
        }
        else
        {
            draw_set_color(c_gray);
            draw_text(xPos-40+(2*xDelta),550,"CONTINUE");
            draw_set_color(c_black);
            draw_text(xPos-70+(2*xDelta),580,"WEAPON SELECT");
        }
        break;
    case 4:
        draw_sprite(sp_redghost,0,xPos,500);
        draw_sprite(sp_blueghost,0,xPos + xDelta,500);
        draw_sprite(sp_greenghost,0,xPos + (2*xDelta),500);
        draw_sprite(sp_yellowknight,0,xPos + (3*xDelta),500);
        if (isContinueSelected)
        {
            draw_set_color(c_black);
            draw_text(xPos-40+(3*xDelta),550,"CONTINUE");
            draw_set_color(c_gray);
            draw_text(xPos-70+(3*xDelta),580,"WEAPON SELECT");
        }
        else
        {
            draw_set_color(c_gray);
            draw_text(xPos-40+(3*xDelta),550,"CONTINUE");
            draw_set_color(c_black);
            draw_text(xPos-70+(3*xDelta),580,"WEAPON SELECT");
        }
        break;
    //instance_create(480,320,obj_player1);//105,105
    //instance_create(463,320,obj_reticle1);//280,105
    
    //instance_create(416,384,obj_ghost2);//105,105
    //instance_create(463,320,obj_reticle2);//280,105
    
    //instance_create(544,384,obj_ghost3);//105,105
    //instance_create(463,320,obj_reticle3);//280,105
    
    //instance_create(608,384,obj_ghost4);//105,105
    //instance_create(463,320,obj_reticle4);//280,105
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
