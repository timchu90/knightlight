<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var p1,p2,p3,p4;
var max_hp = 200;
if(instance_exists(obj_player1)){
    p1 = (playerhp[1] / max_hp) * 100;
    draw_healthbar(obj_player1.x-17, obj_player1.y-21, obj_player1.x+16,obj_player1.y-17, p1, c_black, c_red, c_red, 0, true, false);
    //draw_sprite(sp_healthbar,-1,28,775);
}
if(instance_exists(obj_player2)){
    p2 = (playerhp[2] / max_hp) * 100;
    draw_healthbar(obj_player2.x-17, obj_player2.y-21, obj_player2.x+16,obj_player2.y-17, p2, c_black, c_blue, c_blue, 0, true, false);
    //draw_sprite(sp_healthbar,-1,284,775);
}
if(instance_exists(obj_player3)){
    p3 = (playerhp[3] / max_hp) * 100;
    draw_healthbar(obj_player3.x-17, obj_player3.y-21, obj_player3.x+16,obj_player3.y-17, p3, c_black, c_green, c_green, 0, true, false);
    //draw_sprite(sp_healthbar,-1,540,775);
}
if(instance_exists(obj_player4)){
    p4 = (playerhp[4] / max_hp) * 100;
    draw_healthbar(obj_player4.x-17, obj_player4.y-21, obj_player4.x+16,obj_player4.y-17, p4, c_black, c_yellow, c_yellow, 0, true, false);
    //draw_sprite(sp_healthbar,-1,796,775);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
