<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_flail</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>disco_rotation = 0;
light_init(100,c_white,1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>;//alarm[1] = room_speed * 6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//doesn't check if player is playing
randomize();
var ranNum = irandom(3);
disco_rotation++;
surface_free(lightsurface);
switch(ranNum)
{
    case 0:
        light_init(300,c_red,1);
        break;
    case 1:
        light_init(300,c_blue,1);
        break;
    case 2:
        light_init(300,c_green,1);
        break;
    case 3:
        light_init(300,c_yellow,1);
        break;
}

if (alarm[1] &lt; 1)
{
    alarm[0] = room_speed * 3.75;
    alarm[1] = room_speed * 8.25;
    discoPlayer = ranNum;
    switch(ranNum)
    {
        case 0:
            with(obj_player1)
            {
                surface_free(lightsurface);
                light_init(100,c_red,1);
            }
            break;
        case 1:
            with(obj_player2)
            {
                surface_free(lightsurface);
                light_init(100,c_blue,1);
            }
            break;
        case 2:
            with(obj_player3)
            {
                surface_free(lightsurface);
                light_init(100,c_green,1);
            }
            break;
        case 3:
            with(obj_player4)
            {
                surface_free(lightsurface);
                light_init(100,c_yellow,1);
            }
            break;
    }
}

if (alarm[0] &gt; room_speed * 0.1)
{
    flashon[discoPlayer + 1] = true;
}
else if (alarm[0] &lt; 1 &amp;&amp; alarm[2] &lt; 1)
{
    alarm[2] = room_speed * 3.75;
    alarm[3] = room_speed * 0.2;
    flashon[1] = !flashon[1];
    flashon[2] = !flashon[2];
    flashon[3] = !flashon[3];
    flashon[4] = !flashon[4];
    
    //flashon[1] = false;
    //flashon[2] = false;
    //flashon[3] = false;
    //flashon[4] = false;
    
    with(obj_player1)
    {
        surface_free(lightsurface);
        if (menuselect[1] == 1)
            light_init(200,c_white,1);
        else if (menuselect[1] == 2)
            light_init(150,c_white,1);
        else if (menuselect[1] == 3)
            light_init(120,c_white,1);
        else if (menuselect[1] == 4)
            light_init(180,c_white,1);
        else if (menuselect[1] == 5)
            light_init(100,c_white,1);//this needs to be changed if magic is changed
    }
    with(obj_player2)
    {
        surface_free(lightsurface);
        if (menuselect[2] == 1)
            light_init(200,c_white,1);
        else if (menuselect[2] == 2)
            light_init(150,c_white,1);
        else if (menuselect[2] == 3)
            light_init(120,c_white,1);
        else if (menuselect[2] == 4)
            light_init(180,c_white,1);
        else if (menuselect[2] == 5)
            light_init(100,c_white,1);//this needs to be changed if magic is changed
    }
    with(obj_player3)
    {
        surface_free(lightsurface);
        if (menuselect[3] == 1)
            light_init(200,c_white,1);
        else if (menuselect[3] == 2)
            light_init(150,c_white,1);
        else if (menuselect[3] == 3)
            light_init(120,c_white,1);
        else if (menuselect[3] == 4)
            light_init(180,c_white,1);
        else if (menuselect[3] == 5)
            light_init(100,c_white,1);//this needs to be changed if magic is changed
    }
    with(obj_player4)
    {
        surface_free(lightsurface);
        if (menuselect[4] == 1)
            light_init(200,c_white,1);
        else if (menuselect[4] == 2)
            light_init(150,c_white,1);
        else if (menuselect[4] == 3)
            light_init(120,c_white,1);
        else if (menuselect[4] == 4)
            light_init(180,c_white,1);
        else if (menuselect[4] == 5)
            light_init(100,c_white,1);//this needs to be changed if magic is changed
    }
}
else if (alarm[2] &gt; 1 &amp;&amp; alarm[3] &lt; 1)
{
    alarm[3] = alarm[2];
    flashon[1] = !flashon[1];
    flashon[2] = !flashon[2];
    flashon[3] = !flashon[3];
    flashon[4] = !flashon[4];
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>25,25</point>
    <point>26,26</point>
  </PhysicsShapePoints>
</object>
